import{g as s,p as i,d as l,a as c}from"./api-6055b01b.js";import{C as g,p as n}from"./paginationHelper-8171a740.js";import{r as u}from"./index-675e3599.js";const t="cat_region_valida_estado/",V=()=>{const r=u({...g});return{validRegions:r,getValidRegionsByState:async({page:o=1})=>{try{r.value.loading=!0;const e=await s(`${t}`,{page:o,page_size:r.value.pagination.page_size});return r.value.data=e.results,r.value.pagination=n(r.value.pagination,o,e.count),r.value.loading=!1,Promise.resolve(e.results)}catch(e){return console.error(e),console.log("Error al cargar las regiones válidas",e),Promise.reject(e)}},saveValidRegionByState:async o=>{try{const e=await i(t,o);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al guardar la región",e),Promise.reject(e)}},deleteValidRegionByState:async o=>{try{const e=await l(`${t}`,o);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al eliminar la región",e),Promise.reject(e)}},updateValidRegionByState:async(o,e)=>{try{const a=await c(`${t}`,o,e);return Promise.resolve(a)}catch(a){return console.error(a),console.log("Error al actualizar la región",a),Promise.reject(a)}},getValidRegionByState:async o=>{try{const e=await s(`${t}${o}/`);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al cargar la región",e),Promise.reject(e)}},searchValidRegionsByState:async(o="",e=1)=>{try{r.value.loading=!0;const a=await s(`${t}`,{page:e,search:o,page_size:r.value.pagination.page_size});return r.value.data=a.results,r.value.pagination=n(r.value.pagination,e,a.count),r.value.loading=!1,Promise.resolve(a.results)}catch(a){return console.error(a),console.log("Error al cargar las regiones válidas",a),Promise.reject(a)}}}};export{V as u};
