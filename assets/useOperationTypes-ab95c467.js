import{g as c,p as l,d as p,a as u}from"./api-df405b15.js";import{r as g}from"./index-8d34d961.js";const O={page_size:10,page:1,total:0,total_pages:1,previous_page:1,next_page:1},E=8,T=3,N=T+1,v={data:[],pagination:O,loading:!1},i=(r={},s=1,n=0)=>(r.total=n,r.total_pages=Math.ceil(n/r.page_size),r.page=s,r.previous_page=s>1?s-1:1,r.next_page=s<r.total_pages?s+1:r.total_pages,r),t="cat_tipo_operacion/",I=()=>{const r=g(v);return{tiposOperacion:r,obtenerTiposOperacion:async({page:o=1})=>{try{r.value.loading=!0;const e=await c(`${t}`,{page:o,page_size:r.value.pagination.page_size});return r.value.data=e.results,r.value.pagination=i(r.value.pagination,o,e.count),r.value.loading=!1,Promise.resolve(e.results)}catch(e){return console.error(e),console.log("Error al cargar tipos de operación",e),Promise.reject(e)}},guardarTipoOperacion:async o=>{try{const e=await l(t,o);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al guardar el nuevo tipo de operación",e),Promise.reject(e)}},eliminarTipoOperacion:async o=>{try{const e=await p(`${t}`,o);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al eliminar el tipo de operación",e),Promise.reject(e)}},actualizarTipoOperacion:async o=>{try{const e=await u(`${t}`,o.tipo,o);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al guardar el nuevo tipo de operación",e),Promise.reject(e)}},obtenerTipoOperacion:async o=>{try{const e=await c(`${t}${o}/`);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al cargar tipos de operación",e),Promise.reject(e)}},buscarTiposOperacion:async(o="",e=1)=>{try{r.value.loading=!0;const a=await c(`${t}`,{page:e,search:o,page_size:r.value.pagination.page_size});return r.value.data=a.results,r.value.pagination=i(r.value.pagination,e,a.count),r.value.loading=!1,Promise.resolve(a.results)}catch(a){return console.error(a),console.log("Error al cargar tipos de operación",a),Promise.reject(a)}}}};export{E as P,N as a,T as b,I as u};
