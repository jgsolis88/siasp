import{g as a,p,d as i,a as c}from"./api-d944423e.js";import{C as l,p as s}from"./paginationHelper-8171a740.js";import{r as m}from"./index-e25af515.js";const n="cat_tipo_nombramiento/",E=()=>{const r=m(l);return{appointmentTypes:r,getAppointmentTypes:async({page:t=1})=>{try{r.value.loading=!0;const e=await a(`${n}`,{page:t,page_size:r.value.pagination.page_size});return r.value.data=e.results,r.value.pagination=s(r.value.pagination,t,e.count),r.value.loading=!1,Promise.resolve(e.results)}catch(e){return console.error(e),console.log("Error al cargar tipos de nombramiento",e),Promise.reject(e)}},saveAppointmentType:async t=>{try{const e=await p(n,t);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al guardar el tipo de nombramiento",e),Promise.reject(e)}},deleteAppointmentType:async t=>{try{const e=await i(`${n}`,t);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al eliminar el tipo de nombramiento",e),Promise.reject(e)}},updateAppointmentType:async(t,e)=>{try{const o=await c(`${n}`,t,e);return Promise.resolve(o)}catch(o){return console.error(o),console.log("Error al actualizar el tipo de nombramiento",o),Promise.reject(o)}},getAppointmentType:async t=>{try{const e=await a(`${n}${t}/`);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al cargar el tipo de nombramiento",e),Promise.reject(e)}},searchAppointmentTypes:async(t="",e=1)=>{try{r.value.loading=!0;const o=await a(`${n}`,{page:e,search:t,page_size:r.value.pagination.page_size});return r.value.data=o.results,r.value.pagination=s(r.value.pagination,e,o.count),r.value.loading=!1,Promise.resolve(o.results)}catch(o){return console.error(o),console.log("Error al cargar tipos de nombramiento",o),Promise.reject(o)}}}};export{E as u};
