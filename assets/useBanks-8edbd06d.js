import{g as n,p as c,d as l,a as u}from"./api-d944423e.js";import{C as i,p as t}from"./paginationHelper-8171a740.js";import{r as g}from"./index-e25af515.js";const s="cat_banco/",h=()=>{const r=g(i);return{banks:r,getBanks:async({page:a=1})=>{try{r.value.loading=!0;const e=await n(`${s}`,{page:a,page_size:r.value.pagination.page_size});return r.value.data=e.results,r.value.pagination=t(r.value.pagination,a,e.count),r.value.loading=!1,Promise.resolve(e.results)}catch(e){return console.error(e),console.log("Error al cargar los bancos",e),Promise.reject(e)}},saveBank:async a=>{try{const e=await c(s,a);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al guardar el nuevo banco",e),Promise.reject(e)}},deleteBank:async a=>{try{const e=await l(`${s}`,a);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al eliminar el banco",e),Promise.reject(e)}},updateBank:async(a,e)=>{try{console.log(e.clave);const o=await u(`${s}`,a,e);return Promise.resolve(o)}catch(o){return console.error(o),console.log("Error al guardar el banco",o),Promise.reject(o)}},getBankById:async a=>{try{const e=await n(`${s}${a}/`);return Promise.resolve(e)}catch(e){return console.error(e),console.log("Error al cargar banco",e),Promise.reject(e)}},searchBanks:async(a="",e=1)=>{try{r.value.loading=!0;const o=await n(`${s}`,{page:e,search:a,page_size:r.value.pagination.page_size});return r.value.data=o.results,r.value.pagination=t(r.value.pagination,e,o.count),r.value.loading=!1,Promise.resolve(o.results)}catch(o){return console.error(o),console.log("Error al obtener bancos",o),Promise.reject(o)}}}};export{h as u};
